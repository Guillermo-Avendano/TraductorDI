<?xml version="1.0" encoding="UTF-8"?>
<?page title="Object Header" contentType="text/html;charset=UTF-8"?>
<!--
	@author SA 01/07/2011, created
	Copyright (c) 1983-2021 ASG GmbH & Co. KG, a wholly owned subsidiary of ASG Technologies Group, Inc. All rights reserved.
-->

<!-- <hbox hflex="1">hflex="1" required under Safari for #810836 (otherwise at least width="100%" required under other browsers) -->
<div><div style="float:none">

	<div id="divItemSpec" sclass="asg-objectheader-itemspec" apply="com.rochade.mg.objectheader.BTObjectHeaderComposer" />

	<!-- vbox hflex="1"><!- - hflex="1" required for #810836, width="100%" is NOT fine - ->
		<hbox sclass="asg-itemview-objectinfo-identifierElement" apply="com.rochade.mg.objectheader.BTObjectHeaderComposer" style="padding: 5px 5px 0px 5px;" align="center" hflex="1"><!- - hflex="1" required under Safari for #810836 (otherwise at least width="100%" required under other browsers) - ->
			<!- - defer rendering solution: random issue with FF sometimes not resizing properly when the user changes the size of the window - ->
			<div id="nameContainer" sclass="asg-itemname-labelContainer">
				<div id="nameOverflowContainer" sclass="asg-itemname-labelOverflow" style="overflow:auto; margin:0px; padding:0px; border:0px;" width="100%" height="100%">
					<div id="divname" sclass="asg-itemname-label" width="100%" renderdefer="100"/>
				</div>
			</div>
			<script defer='true'>
				var container = this.$f("nameContainer").$n();
				var content = this.$f("nameOverflowContainer").$n();
				var contentWidget = this.$f("nameOverflowContainer");
				var overflowing = this.$f("divname").$n();
				var overflowingWidget = this.$f("divname");

				var targetWidget = contentWidget;
				var programmaticRecall = false;
				var beforeSizeListener = function(ctl, obj, map) {
					if (!programmaticRecall) {
						content.style.width = "100%";
						content.style.height = "100%";
					}
				};
				var onFitSizeListener = function(ctl, obj, map) {
					if (!programmaticRecall) {
						// assign a temporary small size that will surely fit into the available space and won't require oversizing the ancestors
						content.style.width = "100px";
						content.style.height = "10px";
					}
				};
				var onSizeListener = function(ctl, obj, map) {
					if (!programmaticRecall) {
						content.style.width = "100%";
						content.style.height = "100%";

						programmaticRecall = true;
						try {
							// notify ZKoss that we have resized manually this element, so ZKoss may recompute the size for all hlayout/vlayout widgets and for all widgets specifying hflex="1" or vflex="1"
							zWatch.fire("onSize", targetWidget);
						} finally {
							programmaticRecall = false;
						}
					}
				};
				zk.afterMount(function () {
					zWatch.listen({
						beforeSize: [targetWidget, beforeSizeListener],
						onFitSize: [targetWidget, onFitSizeListener],
						onSize: [targetWidget, onSizeListener]
					});
					///////////////////////////
					// Trick: do a fake notification to ZKoss about size changing for the overflowing widget, that is also deferred,
					// so ZKoss may recompute the size for all hlayout widgets
					// It is mandatory otherwise the tab are is not properly sized at first drawing (it requires
					// that the user resizes the browse window in order to have the correct sizing)
					///////////////////////////
					zWatch.fire("onSize", overflowingWidget);
				});
		    </script>

			<separator width="3px"/>
			<label id="ltype" sclass="asg-itemtype-label"/>
		</hbox>
		-->
		<div style="clear:both" />
		<div id="tag" use="com.rochade.wa.ui.tag.TagView" />
		<div sclass="asg-itemview-objectinfo-infoelement" style="margin-top:5px;">
			<label id="attrOverview" sclass="asg-path-label" value="${wtb:l('ObjectHeader.attributeOverview')}" forward="onClick=popupAttr.onInit"/>
		    <separator bar="true" height="18px" orient="vertical"/>
			<span id="hierarchicalPath" sclass="asg-path-hierarchicalPath" use="com.rochade.wa.ui.editor.objectinfo.HierarchicalNSView" />
		</div>

			<!--
			<div id="pathContainer" sclass="asg-path-pathContainer" align="stretch" hflex="1" visible="false">
				<!- - defer rendering solution: random issue with FF sometimes not resizing properly when the user changes the size of the window - ->
				<div id="pathOverflowContainer" sclass="asg-path-pathOverflow" style="overflow-x:auto; margin:0px; padding:0px; border:0px;" width="100%" height="100%">
					<div id="hierarchicalPath" sclass="asg-path-hierarchicalPath" use="com.rochade.wa.ui.editor.objectinfo.HierarchicalNSView" width="100%" renderdefer="100"/>
				</div>
		 	-->
				<!--
				<script defer='true'>
					var container = this.$f("pathContainer").$n();
					var content = this.$f("pathOverflowContainer").$n();
					var contentWidget = this.$f("pathOverflowContainer");
					var overflowing = this.$f("hierarchicalPath").$n();
					var overflowingWidget = this.$f("hierarchicalPath");

					var targetWidget = contentWidget;
					var programmaticRecall = false;
					var beforeSizeListener = function(ctl, obj, map) {
						if (!programmaticRecall) {
							content.style.width = "100%";
							content.style.height = "100%";
						}
					};
					var onFitSizeListener = function(ctl, obj, map) {
						if (!programmaticRecall) {
							// assign a temporary small size that will surely fit into the available space and won't require oversizing the ancestors
							content.style.width = "100px";
							content.style.height = "10px";
						}
					};
					var onSizeListener = function(ctl, obj, map) {
						if (!programmaticRecall) {
							content.style.width = "100%";
							content.style.height = "100%";

							programmaticRecall = true;
							try {
								// notify ZKoss that we have resized manually this element, so ZKoss may recompute the size for all hlayout/vlayout widgets and for all widgets specifying hflex="1" or vflex="1"
								zWatch.fire("onSize", targetWidget);
							} finally {
								programmaticRecall = false;
							}
						}
					};
					zk.afterMount(function () {
						zWatch.listen({
							beforeSize: [targetWidget, beforeSizeListener],
							onFitSize: [targetWidget, onFitSizeListener],
							onSize: [targetWidget, onSizeListener]
						});
						///////////////////////////
						// Trick: do a fake notification to ZKoss about size changing for the overflowing widget, that is also deferred,
						// so ZKoss may recompute the size for all hlayout widgets
						// It is mandatory otherwise the tab are is not properly sized at first drawing (it requires
						// that the user resizes the browse window in order to have the correct sizing)
						///////////////////////////
						zWatch.fire("onSize", overflowingWidget);
					});
			    </script>
			     -->
<!-- 			</div> -->
		<popup id="popupAttr" width="350px" apply="com.rochade.wa.ui.editor.objectheader.ObjectAttrInfoComposer">
	    	<label value="${wtb:l('ObjectHeader.scrollToAttribute')}" sclass="asg-subtitle-label"/>
	    	<div id="divAttr"/><!-- listbox will be added here -->
	    	<hbox width="100%">
		    	<button id="btnExpandAll"   label="${wtb:l('ObjectHeader.expandAll')}" hflex="1"/>
		    	<button id="btnCollapseAll" label="${wtb:l('ObjectHeader.collapseAll')}" hflex="1"/>
	    	</hbox>
	    </popup>
<!-- 	</vbox> -->
<!-- </hbox>   -->
</div></div>